{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["export const renderImages = (images) => {\n  const gallery = document.querySelector('.gallery');\n  gallery.innerHTML = ''; // Очистить старые изображения перед новым запросом\n\n  console.log('Изображения для отображения:', images); // Логируем изображения\n\n  if (images.length === 0) {\n    gallery.innerHTML = '<p>No images found</p>';\n    return;\n  }\n\n  // Строим строки HTML для всех изображений\n  const cards = images.map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => {\n    return `\n      <div class=\"card\">\n        <a href=\"${largeImageURL}\">\n          <img src=\"${webformatURL}\" alt=\"${tags || 'Image'}\" />\n        </a>\n        <p>Likes: ${likes} | Views: ${views} | Comments: ${comments} | Downloads: ${downloads}</p>\n      </div>\n    `;\n  }).join(''); // Преобразуем массив строк в одну строку\n\n  // Вставляем все карточки в галерею\n  gallery.insertAdjacentHTML('beforeend', cards);\n};\n\n// Функция для получения изображений из API\nexport const fetchImages = async (query) => {\n  const API_KEY = '47502659-8e710eb0ff3e952458316b5b2';\n  const BASE_URL = 'https://pixabay.com/api/';\n\n  try {\n    const url = `${BASE_URL}?key=${API_KEY}&q=${query}&image_type=photo&orientation=horizontal&safesearch=true`;\n    console.log('Запрос к API:', url); // Логируем URL запроса\n\n    const response = await fetch(url);\n\n    if (!response.ok) {\n      throw new Error(`Ошибка при получении данных: ${response.statusText}`);\n    }\n\n    const data = await response.json();\n    console.log('Полученные данные:', data); // Логируем полученные данные\n\n    if (!data.hits || data.hits.length === 0) {\n      throw new Error('No images found');\n    }\n\n    return data.hits; // Возвращаем массив с изображениями\n  } catch (error) {\n    console.error(error);\n    return []; // Возвращаем пустой массив в случае ошибки\n  }\n};\n","export const renderImages = (images) => {\n  const gallery = document.querySelector('.gallery');\n  gallery.innerHTML = ''; // Очистить старые изображения перед новым запросом\n\n  console.log('Изображения для отображения:', images); // Логируем изображения\n\n  if (images.length === 0) {\n    gallery.innerHTML = '<p>No images found</p>';\n    return;\n  }\n\n  // Строим строки HTML для всех изображений\n  const cards = images.map(({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => {\n    return `\n      <div class=\"card\">\n        <a href=\"${largeImageURL}\">\n          <img src=\"${webformatURL}\" alt=\"${tags || 'Image'}\" />\n        </a>\n        <p>Likes: ${likes} | Views: ${views} | Comments: ${comments} | Downloads: ${downloads}</p>\n      </div>\n    `;\n  }).join(''); // Преобразуем массив строк в одну строку\n\n  // Вставляем все карточки в галерею\n  gallery.insertAdjacentHTML('beforeend', cards);\n};\n","import { fetchImages } from './js/pixabay-api';\nimport { renderImages } from './js/render-functions';\nimport iziToast from 'izitoast';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport 'bootstrap';\n\nconst searchForm = document.querySelector('#search-form');\nconst searchInput = document.querySelector('.search-input');\nconst gallery = document.querySelector('.gallery');\nconst loadMoreBtn = document.querySelector('.load-more');\n\nif (searchForm) {\n  searchForm.addEventListener('submit', async (event) => {\n    event.preventDefault();\n\n    const query = searchInput.value.trim();\n\n    if (!query) {\n      iziToast.error({ message: 'Please enter a search term' });\n      return;\n    }\n\n    showLoader();\n    clearGallery();\n\n    try {\n      const images = await fetchImages(query);\n\n      if (images.length === 0) {\n        iziToast.info({ message: 'Sorry, there are no images matching your search query. Please try again!' });\n      } else {\n        renderImages(images);\n        initializeLightbox();\n      }\n    } catch (error) {\n      iziToast.error({ message: 'Something went wrong, please try again!' });\n    } finally {\n      hideLoader();\n    }\n  });\n} else {\n  console.error('Search form element not found');\n}\n\nif (loadMoreBtn) {\n  loadMoreBtn.addEventListener('click', async () => {\n    const query = searchInput.value.trim();\n\n    if (!query) {\n      iziToast.error({ message: 'Please enter a search term' });\n      return;\n    }\n\n    showLoader();\n\n    try {\n      const images = await fetchImages(query);\n\n      if (images.length === 0) {\n        iziToast.info({ message: 'Sorry, there are no more images to load.' });\n      } else {\n        renderImages(images);\n        initializeLightbox();\n      }\n    } catch (error) {\n      iziToast.error({ message: 'Something went wrong, please try again!' });\n    } finally {\n      hideLoader();\n    }\n  });\n} else {\n  console.error('Load more button element not found');\n}\n\nfunction showLoader() {\n  const loader = document.createElement('div');\n  loader.classList.add('loader');\n  loader.textContent = 'Loading...';\n  gallery.appendChild(loader);\n}\n\nfunction hideLoader() {\n  const loader = document.querySelector('.loader');\n  if (loader) loader.remove();\n}\n\nfunction clearGallery() {\n  gallery.innerHTML = '';\n}\n\nfunction initializeLightbox() {\n  new SimpleLightbox('.gallery a');\n}\n"],"names":["fetchImages","query","API_KEY","BASE_URL","url","response","data","error","renderImages","images","gallery","cards","webformatURL","largeImageURL","tags","likes","views","comments","downloads","searchForm","searchInput","loadMoreBtn","event","iziToast","showLoader","clearGallery","initializeLightbox","hideLoader","loader","SimpleLightbox"],"mappings":"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"}